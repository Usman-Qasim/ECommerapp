[{"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\App.js":"2","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\index.js":"3","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Product.js":"7","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Rating.js":"8","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\store.js":"10","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\reducers\\productReducers.js":"11","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\actions\\productActions.js":"12","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Loader.js":"13","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Message.js":"14","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\CartScreen.js":"15","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\constants\\cartConstants.js":"16","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\reducers\\cartReducers.js":"17","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\actions\\cartActions.js":"18","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\reducers\\userReducers.js":"19","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\FormContainer.js":"20","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\actions\\loginActions.js":"21","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\LoginScreen.js":"22","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\constants\\userConstants.js":"23","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\RegisterScreen.js":"24","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\ProfileScreen.js":"25","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\ShippingScreen.js":"26","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\CheckoutSteps.js":"27","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\PaymentScreen.js":"28","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\constants\\orderConstants.js":"30","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\actions\\orderActions.js":"31","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\reducers\\orderReducers.js":"32","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\OrderScreen.js":"33","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\UserListScreen.js":"34","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\UserEditScreen.js":"35","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\ProductListScreen.js":"36","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\constants\\productConstants.js":"37","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\ProductEditScreen.js":"38","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\OrderListScreen.js":"39","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\SearchBox.js":"40","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Paginate.js":"41","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\ProductCarousel.js":"42","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Meta.js":"43"},{"size":362,"mtime":1609553345011,"results":"44","hashOfConfig":"45"},{"size":2722,"mtime":1612208445358,"results":"46","hashOfConfig":"45"},{"size":600,"mtime":1610011934231,"results":"47","hashOfConfig":"45"},{"size":5326,"mtime":1612275069225,"results":"48","hashOfConfig":"45"},{"size":368,"mtime":1609586701192,"results":"49","hashOfConfig":"45"},{"size":1766,"mtime":1612273488246,"results":"50","hashOfConfig":"45"},{"size":933,"mtime":1609602524679,"results":"51","hashOfConfig":"45"},{"size":1768,"mtime":1609590605828,"results":"52","hashOfConfig":"45"},{"size":7856,"mtime":1612272438914,"results":"53","hashOfConfig":"45"},{"size":2416,"mtime":1612252777613,"results":"54","hashOfConfig":"45"},{"size":3821,"mtime":1612252712300,"results":"55","hashOfConfig":"45"},{"size":4969,"mtime":1612274947153,"results":"56","hashOfConfig":"45"},{"size":411,"mtime":1610099153857,"results":"57","hashOfConfig":"45"},{"size":254,"mtime":1610099653176,"results":"58","hashOfConfig":"45"},{"size":3659,"mtime":1611818451658,"results":"59","hashOfConfig":"45"},{"size":244,"mtime":1611826405665,"results":"60","hashOfConfig":"45"},{"size":1187,"mtime":1611826395739,"results":"61","hashOfConfig":"45"},{"size":1234,"mtime":1611825248813,"results":"62","hashOfConfig":"45"},{"size":3578,"mtime":1611919892450,"results":"63","hashOfConfig":"45"},{"size":350,"mtime":1610541902457,"results":"64","hashOfConfig":"45"},{"size":6014,"mtime":1612274460584,"results":"65","hashOfConfig":"45"},{"size":2225,"mtime":1610545172241,"results":"66","hashOfConfig":"45"},{"size":1534,"mtime":1611919622441,"results":"67","hashOfConfig":"45"},{"size":3235,"mtime":1611461707016,"results":"68","hashOfConfig":"45"},{"size":5571,"mtime":1612028081735,"results":"69","hashOfConfig":"45"},{"size":2604,"mtime":1611507188354,"results":"70","hashOfConfig":"45"},{"size":1438,"mtime":1611557894439,"results":"71","hashOfConfig":"45"},{"size":1823,"mtime":1611649339021,"results":"72","hashOfConfig":"45"},{"size":5112,"mtime":1612019819477,"results":"73","hashOfConfig":"45"},{"size":1239,"mtime":1612023101568,"results":"74","hashOfConfig":"45"},{"size":4714,"mtime":1612023528389,"results":"75","hashOfConfig":"45"},{"size":3507,"mtime":1612023193119,"results":"76","hashOfConfig":"45"},{"size":7580,"mtime":1612356361638,"results":"77","hashOfConfig":"45"},{"size":2830,"mtime":1612274884730,"results":"78","hashOfConfig":"45"},{"size":3396,"mtime":1612005872712,"results":"79","hashOfConfig":"45"},{"size":4107,"mtime":1612208524716,"results":"80","hashOfConfig":"45"},{"size":1544,"mtime":1612252501230,"results":"81","hashOfConfig":"45"},{"size":5774,"mtime":1612014526896,"results":"82","hashOfConfig":"45"},{"size":2611,"mtime":1612022278873,"results":"83","hashOfConfig":"45"},{"size":786,"mtime":1612193933324,"results":"84","hashOfConfig":"45"},{"size":784,"mtime":1612209339131,"results":"85","hashOfConfig":"45"},{"size":1261,"mtime":1612259949197,"results":"86","hashOfConfig":"45"},{"size":517,"mtime":1612269733645,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1c1z296",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\reportWebVitals.js",[],["179","180"],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\App.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\index.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\store.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\actions\\loginActions.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\PlaceOrderScreen.js",["181"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  // Calculate Prices\r\n  const addDecimal = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n  cart.itemsPrice = addDecimal(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = cart.itemsPrice > 100 ? 100 : 0;\r\n  cart.taxPrice = addDecimal(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice =\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice);\r\n\r\n  const orderCreate = useSelector((state) => state.createOrder);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address : </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method : </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} X {item.price} = ${item.price * item.qty}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\OrderScreen.js",["182"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVERED_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({ match, history }) {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  // Calculate Prices\r\n  const addDecimal = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.detailOrder);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: succesPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: succesDeliver } = orderDeliver;\r\n\r\n  if (!loading) {\r\n    order.itemsPrice = addDecimal(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || succesPay || succesDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVERED_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, succesPay, order, succesDeliver, history]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const delivereHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\"> {error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order : {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name : </strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email : </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address : </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliverAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method : </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} X {item.price} = ${item.price * item.qty}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={delivereHandler}\r\n                    >\r\n                      Mark as Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\ProductEditScreen.js",["183"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listProducts,\r\n  detailProduct,\r\n  updateProduct,\r\n} from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.singleProduct);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(detailProduct(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, product, productId, history, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        header: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productList\" className=\"btn btn-primary my-3\">\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter product name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count in Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Count in stock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Enter URL of Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter URL of image\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\screens\\OrderListScreen.js",["184","185"],"import React, { useEffect } from \"react\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\nfunction OrderListScreen({ history, match }) {\r\n  const dispatch = useDispatch();\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, dispatch, userInfo]);\r\n  console.log(orders);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped hover bordered responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>DELIVERED</th>\r\n              <th>PAID</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order.user._id}</td>\r\n                <td>{order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)} </td>\r\n                <td>$ {order.totalPrice}</td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button className=\"btn-sm\" type=\"button\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\Usman_Qasim\\Desktop\\ECOM\\frontend\\src\\components\\Meta.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":34,"column":6,"nodeType":"192","endLine":34,"endColumn":24,"suggestions":"193"},{"ruleId":"190","severity":1,"message":"194","line":72,"column":6,"nodeType":"192","endLine":72,"endColumn":67,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":7,"column":3,"nodeType":"198","messageId":"199","endLine":7,"endColumn":15},{"ruleId":"196","severity":1,"message":"200","line":2,"column":25,"nodeType":"198","messageId":"199","endLine":2,"endColumn":28},{"ruleId":"196","severity":1,"message":"201","line":2,"column":30,"nodeType":"198","messageId":"199","endLine":2,"endColumn":33},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["204"],"React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["205"],"no-unused-vars","'listProducts' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [history, order._id, success]",{"range":"210","text":"211"},"Update the dependencies array to be: [dispatch, orderId, succesPay, order, succesDeliver, history, userInfo]",{"range":"212","text":"213"},[1205,1223],"[history, order._id, success]",[2284,2345],"[dispatch, orderId, succesPay, order, succesDeliver, history, userInfo]"]